@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

    <div class="navbar-nav">
        @if (User.IsInRole("Administrator") && SignInManager.IsSignedIn(User))
        {
            <div class="m-auto pr-2 mg-bt-10px">Hello @User.Identity.Name</div>
            <div class="dropdown navbar-nav flex-grow-1">
                <button class="btn btn-secondary dropdown-toggle text-dark" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Account
                </button>
                <div class="dropdown-menu w-100 text-center" aria-labelledby="dropdownMenuButton">
                    <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register an user</a>
                    <form class="form-inline logout" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                        <button type="submit" class="nav-link btn text-dark text-center text-dark">Logout</button>
                    </form>
                </div>
            </div>
        }
        else if (SignInManager.IsSignedIn(User))
        {
            <div class="m-auto pr-2 mg-bt-10px">Hello @User.Identity.Name</div>
            <form class="form-inline logout nav-link" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="btn text-dark text-center logoutItem w-100 nav-link">Logout</button>
            </form>
        }
        else if (!SignInManager.IsSignedIn(User))
        {
            <a class="nav-link text-dark btn btn-secondary" asp-area="Identity" asp-page="/Account/Login">Login</a>
        }
            <a class="nav-link text-dark btn btn-secondary" asp-controller="AppAuthor" asp-action="index">About author</a>
    </div>
